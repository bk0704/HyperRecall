name: Build

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build_type: Debug
          - os: ubuntu-latest
            build_type: Release
          - os: windows-latest
            build_type: Release
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build pkg-config libsqlite3-dev
          sudo apt-get install -y qt6-base-dev qt6-base-dev-tools

      - name: Clone vcpkg (Windows)
        if: runner.os == 'Windows'
        run: git clone --depth 1 https://github.com/microsoft/vcpkg.git vcpkg

      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Bootstrap vcpkg (Windows)
        if: runner.os == 'Windows'
        run: .\vcpkg\bootstrap-vcpkg.bat
        shell: powershell

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: vcpkg install qtbase sqlite3 --triplet x64-windows
        shell: powershell

      - name: Configure (Linux)
        if: runner.os == 'Linux'
        run: |
          cmake -S . -B "build/${{ matrix.build_type }}" -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        shell: bash

      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B "build/${{ matrix.build_type }}" -G Ninja `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            "-DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"
        shell: powershell

      - name: Build
        run: cmake --build build/${{ matrix.build_type }}
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hyperrecall-${{ matrix.os }}-${{ matrix.build_type }}
          path: build/${{ matrix.build_type }}/bin/hyperrecall*
          if-no-files-found: warn
